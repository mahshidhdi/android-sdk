apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion setup.compileSdk

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode release.versionCode
        versionName release.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), proguard.common, 'proguard-rules.pro'
            consumerProguardFiles proguard.consumerCommon, 'proguard-consumer-rules.pro'
        }
    }

    buildTypes.all { buildType ->
        sourceSets.getByName(buildType.name).java.srcDirs +=
                "build/generated/source/kaptKotlin/${buildType.name}"
    }

    // TODO remove this when migrated to AndroidX
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation project(":utils")
    implementation project(":rxjava")

    testImplementation 'junit:junit:4.12'
    testImplementation "io.mockk:mockk:${versions.mockk}"
    testImplementation project(':test-utils')

    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
    kaptTest "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    implementation "com.google.dagger:dagger:${versions.dagger}"

    // Include this with 'api' so SDK users will have access to the `Task` class  -- DELETE THIS
    api "com.google.firebase:firebase-core:${versions.firebaseCore}"
    implementation "com.google.firebase:firebase-messaging:${versions.firebaseMessaging}"

    implementation "android.arch.work:work-runtime-ktx:${versions.workManager}"
    implementation("android.arch.work:work-rxjava2:${versions.workManager}")  { exclude group: 'io.reactivex.rxjava2', module: 'rxjava' }
    androidTestImplementation "android.arch.work:work-testing:${versions.workManager}"

    // Location
    implementation "com.google.android.gms:play-services-location:${versions.gms}"
//    implementation 'com.android.support:support-annotations:28.0.0'
}

ext {
    artifact = "core"
    bintrayName = 'hengam-core'
    libraryName = "HengamCore"
    libraryDescription = "Hengam Plus Core module"
    uploadSources = true
}

apply from : "$rootProject.projectDir/bintray-android.gradle"
apply from : "$rootProject.projectDir/publish.gradle"
